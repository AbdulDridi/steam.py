name: Run tests.

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - uses: actions/cache@v2
        id: cached-dependecies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}-no-dev

      - name: Validate pyproject.toml
        run: poetry check

      - name: Install dependencies
        if: steps.cached-dependecies.outputs.cache-hit != 'true'
        run: poetry install

      - name: Run tests for CPython ${{ matrix.python-version }}
        env:
          USERNAME: ${{ secrets.STEAM_USERNAME }}
          PASSWORD: ${{ secrets.STEAM_PASSWORD }}
          SHARED_SECRET: ${{ secrets.STEAM_SHARED_SECRET }}
          IDENTITY_SECRET: ${{ secrets.STEAM_IDENTITY_SECRET }}
        run: poetry run pytest .
        timeout-minutes: 30
